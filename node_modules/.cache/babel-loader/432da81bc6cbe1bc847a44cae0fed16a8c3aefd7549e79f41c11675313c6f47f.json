{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adasa\\\\Desktop\\\\humanResources\\\\MaidenlessWebsite\\\\src\\\\Components\\\\PostView\\\\PostRetriever.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createPost, getAllPosts, getPostById, removePost } from \"../../Common/Services/PostService\";\nimport { Posts } from \"./Posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  // Variables in the state to hold data\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState([]);\n  const [postTitle, setPostTitle] = useState();\n\n  // UseEffect to run when the page loads to\n  // obtain async data and render\n  useEffect(() => {\n    getAllPosts().then(posts => {\n      setPosts(posts);\n    });\n  }, []);\n\n  // Flags in the state to watch for add/remove updates\n  const [add, setAdd] = useState(false);\n  const [remove, setRemove] = useState(\"\");\n\n  // UseEffect that runs when changes\n  // are made to the state variables/flags\n  useEffect(() => {\n    // Check for add flag and make sure title + content state variables are defined\n    if (postTitle && add) {\n      createPost(postTitle).then(newPost => {\n        setAdd(false);\n        // Add the newly created post to the posts array\n        // to render the new list of posts (thru spread/concatination)\n        setPosts([...posts, newPost]);\n\n        //Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\n        //posts = posts.push(post)\n        //setPosts(posts)\n      });\n    }\n\n    // Check if remove state variable is holding an ID\n    if (remove.length > 0) {\n      //Filter the old posts list to take out selected post\n      const newPosts = posts.filter(post => post.id !== remove);\n      setPosts(newPosts);\n      removePost(remove).then(() => {\n        console.log(\"Removed post with ID: \", remove);\n      });\n      // Reset remove state variable\n      setRemove(\"\");\n    }\n  }, [postTitle, posts, add, remove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container-xl\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"d-grid gap-2 mb-4\",\n      children: [\" \", console.log(post.get(\"createdAt\")), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-dark\",\n        type: \"button\",\n        \"data-bs-toggle\": \"collapse\",\n        \"data-bs-target\": '#' + post.id,\n        \"aria-expanded\": \"false\",\n        \"aria-controls\": '#' + post.id,\n        children: [post.get(\"Title\"), \" | Posted: \", post.get(\"createdAt\").toDateString(), \" | Last Updated: \", post.get(\"updatedAt\").toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"collapse\",\n        id: post.id,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: post.get(\"Content\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n};\n_s(PostList, \"NHHtxY2xxQZm606eDV2uc9zQ858=\");\n_c = PostList;\nexport { PostList };\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","createPost","getAllPosts","getPostById","removePost","Posts","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","post","setPost","postTitle","setPostTitle","then","add","setAdd","remove","setRemove","newPost","length","newPosts","filter","id","console","log","class","children","map","get","type","toDateString","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","_c","$RefreshReg$"],"sources":["C:/Users/adasa/Desktop/humanResources/MaidenlessWebsite/src/Components/PostView/PostRetriever.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  createPost,\r\n  getAllPosts,\r\n  getPostById,\r\n  removePost\r\n} from \"../../Common/Services/PostService\";\r\nimport { Posts } from \"./Posts\";\r\n  \r\n\r\n\r\n  const PostList = () => {\r\n    // Variables in the state to hold data\r\n    const [posts, setPosts] = useState([]);\r\n    const [post, setPost] = useState([]);\r\n    const [postTitle, setPostTitle] = useState();\r\n  \r\n    // UseEffect to run when the page loads to\r\n    // obtain async data and render\r\n    useEffect(() => {\r\n      getAllPosts().then((posts) => {\r\n        setPosts(posts);\r\n      });\r\n    }, []);\r\n\r\n    // Flags in the state to watch for add/remove updates\r\n    const [add, setAdd] = useState(false);\r\n    const [remove, setRemove] = useState(\"\");\r\n\r\n  // UseEffect that runs when changes\r\n  // are made to the state variables/flags\r\n  useEffect(() => {\r\n    // Check for add flag and make sure title + content state variables are defined\r\n    if (postTitle && add) {\r\n      createPost(postTitle).then((newPost) => {\r\n        setAdd(false);\r\n        // Add the newly created post to the posts array\r\n        // to render the new list of posts (thru spread/concatination)\r\n        setPosts([...posts, newPost]);\r\n\r\n        //Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\r\n        //posts = posts.push(post)\r\n        //setPosts(posts)\r\n      });\r\n    }\r\n\r\n    // Check if remove state variable is holding an ID\r\n    if (remove.length > 0) {\r\n      //Filter the old posts list to take out selected post\r\n      const newPosts = posts.filter((post) => post.id !== remove);\r\n      setPosts(newPosts);\r\n\r\n      removePost(remove).then(() => {\r\n        console.log(\"Removed post with ID: \", remove);\r\n      });\r\n      // Reset remove state variable\r\n      setRemove(\"\");\r\n    }\r\n  }, [postTitle, posts, add, remove]);\r\n\r\n    return (\r\n      <div class=\"container-xl\">\r\n          {posts.map((post)=>( \r\n            <div class=\"d-grid gap-2 mb-4\">\r\n              {/* creates a button with basic post overview */} {console.log(post.get(\"createdAt\"))}\r\n              <button class=\"btn btn-dark\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target={'#'+(post.id)} aria-expanded=\"false\" aria-controls={'#'+(post.id)}>\r\n                {post.get(\"Title\")} | Posted: {post.get(\"createdAt\").toDateString()} | Last Updated: {post.get(\"updatedAt\").toDateString()}\r\n              </button>\r\n              <div class=\"collapse\" id={post.id}>\r\n                <div class=\"card\"><div class=\"card-body\">\r\n                  <div dangerouslySetInnerHTML={post.get(\"Content\")}></div>\r\n                </div></div>\r\n              </div>\r\n            </div>)\r\n          )}\r\n      </div>\r\n    );\r\n}\r\n\r\n  export { PostList };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}