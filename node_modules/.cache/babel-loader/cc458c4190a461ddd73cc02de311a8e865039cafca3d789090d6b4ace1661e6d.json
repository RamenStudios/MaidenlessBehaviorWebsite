{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adasa\\\\Desktop\\\\devblrProject\\\\webdev-project\\\\src\\\\Components\\\\BlogView\\\\BlogRetriever.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createBlog, getAllBlogs, getBlogById, removeBlog } from \"../../Common/Services/BlogService\";\nimport { outputPosts } from \"./NonDetailedPostRetriever.js\";\nimport { Blogs } from \"./Blogs\";\n\n// future feature: genre filtering\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = () => {\n  _s();\n  // Variables in the state to hold data\n  const [blogs, setBlogs] = useState([]);\n  const [blog, setBlog] = useState([]);\n  const [blogTitle, setBlogTitle] = useState();\n\n  // UseEffect to run when the page loads to\n  // obtain async data and render\n  useEffect(() => {\n    getAllBlogs().then(blogs => {\n      setBlogs(blogs);\n    });\n  }, []);\n\n  // Flags in the state to watch for add/remove updates\n  const [add, setAdd] = useState(false);\n  const [remove, setRemove] = useState(\"\");\n\n  // UseEffect that runs when changes\n  // are made to the state variables/flags\n  useEffect(() => {\n    // Check for add flag and make sure title + content state variables are defined\n    if (blogTitle && add) {\n      createBlog(blogTitle).then(newBlog => {\n        setAdd(false);\n        // Add the newly created post to the posts array\n        // to render the new list of posts (thru spread/concatination)\n        setBlogs([...blogs, newBlog]);\n\n        //Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\n        //posts = posts.push(post)\n        //setPosts(posts)\n      });\n    }\n\n    // Check if remove state variable is holding an ID\n    if (remove.length > 0) {\n      //Filter the old posts list to take out selected post\n      const newBlogs = blogs.filter(blog => blog.id !== remove);\n      setBlogs(newBlogs);\n      removeBlog(remove).then(() => {\n        console.log(\"Removed blog with ID: \", remove);\n      });\n      // Reset remove state variable\n      setRemove(\"\");\n    }\n  }, [blogTitle, blogs, add, remove]);\n\n  // Handler to handle event passed from child submit button\n  const onClickHandler = e => {\n    e.preventDefault();\n    // Trigger add flag to create post and\n    // re-render list with new post\n    setAdd(true);\n  };\n\n  // Handler to track changes to the child input text for TITLE\n  const onChangeBlogTitleHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    // Continuously updating values to be added on submit\n    setBlogTitle(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: blogs.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [blog.get(\"blogTitle\"), \": \", blog.get(\"user\")]\n            }, blog.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                // Set remove variable and trigger re-render\n                setRemove(blog.id);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Blog by ID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), blogs.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", blog.id, \": \", blog.get(\"blogTitle\"), \" \"]\n        }, blog.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Blogs, {\n      onClick: onClickHandler,\n      onChangeBlogTitle: onChangeBlogTitleHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n_s(BlogList, \"EKLRpI+Zrpvb2hYT47ccalQQ1+A=\");\n_c = BlogList;\nexport { BlogList };\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["React","useState","useEffect","createBlog","getAllBlogs","getBlogById","removeBlog","outputPosts","Blogs","jsxDEV","_jsxDEV","BlogList","_s","blogs","setBlogs","blog","setBlog","blogTitle","setBlogTitle","then","add","setAdd","remove","setRemove","newBlog","length","newBlogs","filter","id","console","log","onClickHandler","e","preventDefault","onChangeBlogTitleHandler","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","map","get","onClick","onChangeBlogTitle","_c","$RefreshReg$"],"sources":["C:/Users/adasa/Desktop/devblrProject/webdev-project/src/Components/BlogView/BlogRetriever.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  createBlog,\r\n  getAllBlogs,\r\n  getBlogById,\r\n  removeBlog\r\n} from \"../../Common/Services/BlogService\";\r\nimport { outputPosts } from \"./NonDetailedPostRetriever.js\";\r\nimport { Blogs } from \"./Blogs\";\r\n  \r\n  // future feature: genre filtering\r\n\r\n  const BlogList = () => {\r\n    // Variables in the state to hold data\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [blog, setBlog] = useState([]);\r\n    const [blogTitle, setBlogTitle] = useState();\r\n  \r\n    // UseEffect to run when the page loads to\r\n    // obtain async data and render\r\n    useEffect(() => {\r\n      getAllBlogs().then((blogs) => {\r\n        setBlogs(blogs);\r\n      });\r\n    }, []);\r\n\r\n    // Flags in the state to watch for add/remove updates\r\n    const [add, setAdd] = useState(false);\r\n    const [remove, setRemove] = useState(\"\");\r\n\r\n  // UseEffect that runs when changes\r\n  // are made to the state variables/flags\r\n  useEffect(() => {\r\n    // Check for add flag and make sure title + content state variables are defined\r\n    if (blogTitle && add) {\r\n      createBlog(blogTitle).then((newBlog) => {\r\n        setAdd(false);\r\n        // Add the newly created post to the posts array\r\n        // to render the new list of posts (thru spread/concatination)\r\n        setBlogs([...blogs, newBlog]);\r\n\r\n        //Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\r\n        //posts = posts.push(post)\r\n        //setPosts(posts)\r\n      });\r\n    }\r\n\r\n    // Check if remove state variable is holding an ID\r\n    if (remove.length > 0) {\r\n      //Filter the old posts list to take out selected post\r\n      const newBlogs = blogs.filter((blog) => blog.id !== remove);\r\n      setBlogs(newBlogs);\r\n\r\n      removeBlog(remove).then(() => {\r\n        console.log(\"Removed blog with ID: \", remove);\r\n      });\r\n      // Reset remove state variable\r\n      setRemove(\"\");\r\n    }\r\n  }, [blogTitle, blogs, add, remove]);\r\n\r\n    // Handler to handle event passed from child submit button\r\n    const onClickHandler = (e) => {\r\n      e.preventDefault();\r\n      // Trigger add flag to create post and\r\n      // re-render list with new post\r\n      setAdd(true);\r\n    };\r\n  \r\n    // Handler to track changes to the child input text for TITLE\r\n    const onChangeBlogTitleHandler = (e) => {\r\n      e.preventDefault();\r\n      console.log(e.target.value);\r\n      // Continuously updating values to be added on submit\r\n      setBlogTitle(e.target.value);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <div>\r\n          {blogs.length > 0 && (\r\n            <ul>\r\n              {blogs.map((blog) => (\r\n                <div>\r\n                  <span>\r\n                    {/* Using getter for post Object to display title and content */}\r\n                    <li key={blog.id}>{blog.get(\"blogTitle\")}: {blog.get(\"user\")}</li>{\" \"}\r\n                    {/* Button with inline click handler to obtain \r\n                    instance of post for remove state variable*/}\r\n                    <button\r\n                      onClick={(e) => {\r\n                        // Set remove variable and trigger re-render\r\n                        setRemove(blog.id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <p> Blog by ID: </p>\r\n          {/* Check that the post object exists */}\r\n          {blogs.length > 0 && (\r\n            <ul>\r\n              {/* Using getter for post Object to display id */}\r\n              {blogs.map((blog) => (\r\n                <li key={blog.id}> {blog.id}: {blog.get(\"blogTitle\")} </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        {/* Stateless Child component passing up events from form */}\r\n        <Blogs onClick={onClickHandler} onChangeBlogTitle={onChangeBlogTitleHandler} />\r\n      </div>\r\n    );\r\n}\r\n\r\n  export { BlogList };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,UAAU,QACL,mCAAmC;AAC1C,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,KAAK,QAAQ,SAAS;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC;;EAE5C;EACA;EACAC,SAAS,CAAC,MAAM;IACdE,WAAW,CAAC,CAAC,CAACe,IAAI,CAAEN,KAAK,IAAK;MAC5BC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;EACAC,SAAS,CAAC,MAAM;IACd;IACA,IAAIe,SAAS,IAAIG,GAAG,EAAE;MACpBjB,UAAU,CAACc,SAAS,CAAC,CAACE,IAAI,CAAEK,OAAO,IAAK;QACtCH,MAAM,CAAC,KAAK,CAAC;QACb;QACA;QACAP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEW,OAAO,CAAC,CAAC;;QAE7B;QACA;QACA;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIF,MAAM,CAACG,MAAM,GAAG,CAAC,EAAE;MACrB;MACA,MAAMC,QAAQ,GAAGb,KAAK,CAACc,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACa,EAAE,KAAKN,MAAM,CAAC;MAC3DR,QAAQ,CAACY,QAAQ,CAAC;MAElBpB,UAAU,CAACgB,MAAM,CAAC,CAACH,IAAI,CAAC,MAAM;QAC5BU,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAER,MAAM,CAAC;MAC/C,CAAC,CAAC;MACF;MACAC,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC,EAAE,CAACN,SAAS,EAAEJ,KAAK,EAAEO,GAAG,EAAEE,MAAM,CAAC,CAAC;;EAEjC;EACA,MAAMS,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACAZ,MAAM,CAAC,IAAI,CAAC;EACd,CAAC;;EAED;EACA,MAAMa,wBAAwB,GAAIF,CAAC,IAAK;IACtCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,OAAO,CAACC,GAAG,CAACE,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3B;IACAlB,YAAY,CAACc,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN/B,OAAA;MAAA2B,QAAA,EACGxB,KAAK,CAACY,MAAM,GAAG,CAAC,iBACff,OAAA;QAAA2B,QAAA,EACGxB,KAAK,CAAC6B,GAAG,CAAE3B,IAAI,iBACdL,OAAA;UAAA2B,QAAA,eACE3B,OAAA;YAAA2B,QAAA,gBAEE3B,OAAA;cAAA2B,QAAA,GAAmBtB,IAAI,CAAC4B,GAAG,CAAC,WAAW,CAAC,EAAC,IAAE,EAAC5B,IAAI,CAAC4B,GAAG,CAAC,MAAM,CAAC;YAAA,GAAnD5B,IAAI,CAACa,EAAE;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiD,CAAC,EAAC,GAAG,eAGtE/B,OAAA;cACEkC,OAAO,EAAGZ,CAAC,IAAK;gBACd;gBACAT,SAAS,CAACR,IAAI,CAACa,EAAE,CAAC;cACpB,CAAE;cAAAS,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEnB5B,KAAK,CAACY,MAAM,GAAG,CAAC,iBACff,OAAA;QAAA2B,QAAA,EAEGxB,KAAK,CAAC6B,GAAG,CAAE3B,IAAI,iBACdL,OAAA;UAAA2B,QAAA,GAAkB,GAAC,EAACtB,IAAI,CAACa,EAAE,EAAC,IAAE,EAACb,IAAI,CAAC4B,GAAG,CAAC,WAAW,CAAC,EAAC,GAAC;QAAA,GAA7C5B,IAAI,CAACa,EAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0C,CAC3D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEN/B,OAAA,CAACF,KAAK;MAACoC,OAAO,EAAEb,cAAe;MAACc,iBAAiB,EAAEX;IAAyB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEZ,CAAC;AAAA7B,EAAA,CA5GOD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA8Gd,SAASA,QAAQ;AAAG,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}