{"ast":null,"code":"var _jsxFileName = \"/Users/scapodicci/Desktop/WebDev_HW/rodriguez_capodicci_feature_4_kickoff/src/Components/Main/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { createPost, getAllPosts, getById, removePost } from \"../../Common/Services/LearnService\";\nimport PostForm from \"./PostForm\";\n\n/* ADAPTED FROM LECTURE 14 EXAMPLE */\n\n/* STATEFUL PARENT COMPONENT */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  // Variables in the state to hold data\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState([]);\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n\n  // UseEffect to run when the page loads to\n  // obtain async data and render\n  useEffect(() => {\n    getAllPosts().then(posts => {\n      console.log(posts);\n      setPosts(posts);\n    });\n\n    // getById(\"xm4edVKNUF\").then((post) => {\n    //   console.log(post);\n    //   setPost(post);\n    // });\n  }, []);\n\n  // Flags in the state to watch for add/remove updates\n  const [add, setAdd] = useState(false);\n  const [remove, setRemove] = useState(\"\");\n\n  // UseEffect that runs when changes\n  // are made to the state variables/flags\n  useEffect(() => {\n    // Check for add flag and make sure title + content state variables are defined\n    if (title && content && add) {\n      createPost(title, content).then(newPost => {\n        setAdd(false);\n        // Add the newly created post to the posts array\n        // to render the new list of posts (thru spread/concatination)\n        setPosts([...posts, newPost]);\n\n        //Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\n        //posts = posts.push(post)\n        //setPosts(posts)\n      });\n    }\n\n    // Check if remove state variable is holding an ID\n    if (remove.length > 0) {\n      //Filter the old posts list to take out selected post\n      const newPosts = posts.filter(post => post.id !== remove);\n      setPosts(newPosts);\n      removePost(remove).then(() => {\n        console.log(\"Removed post with ID: \", remove);\n      });\n      // Reset remove state variable\n      setRemove(\"\");\n    }\n  }, [name, posts, add, remove]);\n\n  // Handler to handle event passed from child submit button\n  const onClickHandler = e => {\n    e.preventDefault();\n    // Trigger add flag to create post and\n    // re-render list with new post\n    setAdd(true);\n  };\n\n  // Handler to track changes to the child input text for TITLE\n  const onChangeTitleHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    // Continuously updating values to be added on submit\n    setTitle(e.target.value);\n  };\n\n  // Handler to track changes to the child input text for CONTENT\n  const onChangeContentHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    // Continuously updating values to be added on submit\n    setContent(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), \"This is the main list parent component.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: lessons.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lessons.map(lesson => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: lesson.get(\"name\")\n            }, lesson.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                // Set remove variable and trigger re-render\n                setRemove(lesson.id);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Lesson by ID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), Object.keys(lesson).length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lessons.map(lesson => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", lesson.id, \" \"]\n        }, \"1\" + lesson.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainForm, {\n      onClick: onClickHandler,\n      onChangeTitle: onChangeTitleHandler,\n      onChangeContent: onChangeContentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"a1S+mcLqQ9Oz8g53GNrMjCu+JkQ=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","createPost","getAllPosts","getById","removePost","PostForm","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","post","setPost","title","setTitle","content","setContent","then","console","log","add","setAdd","remove","setRemove","newPost","length","newPosts","filter","id","name","onClickHandler","e","preventDefault","onChangeTitleHandler","target","value","onChangeContentHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","lessons","map","lesson","get","onClick","Object","keys","MainForm","onChangeTitle","onChangeContent","_c","$RefreshReg$"],"sources":["/Users/scapodicci/Desktop/WebDev_HW/rodriguez_capodicci_feature_4_kickoff/src/Components/Main/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  createPost,\n  getAllPosts,\n  getById,\n  removePost\n} from \"../../Common/Services/LearnService\";\nimport PostForm from \"./PostForm\";\n\n/* ADAPTED FROM LECTURE 14 EXAMPLE */\n\n/* STATEFUL PARENT COMPONENT */\nconst PostList = () => {\n  // Variables in the state to hold data\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState([]);\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n\n  // UseEffect to run when the page loads to\n  // obtain async data and render\n  useEffect(() => {\n    getAllPosts().then((posts) => {\n      console.log(posts);\n      setPosts(posts);\n    });\n\n    // getById(\"xm4edVKNUF\").then((post) => {\n    //   console.log(post);\n    //   setPost(post);\n    // });\n  }, []);\n\n  // Flags in the state to watch for add/remove updates\n  const [add, setAdd] = useState(false);\n  const [remove, setRemove] = useState(\"\");\n\n  // UseEffect that runs when changes\n  // are made to the state variables/flags\n  useEffect(() => {\n    // Check for add flag and make sure title + content state variables are defined\n    if (title && content && add) {\n      createPost(title, content).then((newPost) => {\n        setAdd(false);\n        // Add the newly created post to the posts array\n        // to render the new list of posts (thru spread/concatination)\n        setPosts([...posts, newPost]);\n\n        //Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\n        //posts = posts.push(post)\n        //setPosts(posts)\n      });\n    }\n\n    // Check if remove state variable is holding an ID\n    if (remove.length > 0) {\n      //Filter the old posts list to take out selected post\n      const newPosts = posts.filter((post) => post.id !== remove);\n      setPosts(newPosts);\n\n      removePost(remove).then(() => {\n        console.log(\"Removed post with ID: \", remove);\n      });\n      // Reset remove state variable\n      setRemove(\"\");\n    }\n  }, [name, posts, add, remove]);\n\n  // Handler to handle event passed from child submit button\n  const onClickHandler = (e) => {\n    e.preventDefault();\n    // Trigger add flag to create post and\n    // re-render list with new post\n    setAdd(true);\n  };\n\n  // Handler to track changes to the child input text for TITLE\n  const onChangeTitleHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    // Continuously updating values to be added on submit\n    setTitle(e.target.value);\n  };\n\n  // Handler to track changes to the child input text for CONTENT\n  const onChangeContentHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    // Continuously updating values to be added on submit\n    setContent(e.target.value);\n  };\n\n  return (\n    <div>\n      <hr />\n      This is the main list parent component.\n      <div>\n        {lessons.length > 0 && (\n          <ul>\n            {lessons.map((lesson) => (\n              <div>\n                <span>\n                  {/* Using getter for lesson Object to display name */}\n                  <li key={lesson.id}>{lesson.get(\"name\")}</li>{\" \"}\n                  {/* Button with inline click handler to obtain \n                  instance of lesson for remove state variable*/}\n                  <button\n                    onClick={(e) => {\n                      // Set remove variable and trigger re-render\n                      setRemove(lesson.id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                </span>\n              </div>\n            ))}\n          </ul>\n        )}\n      </div>\n      <div>\n        <p> Lesson by ID: </p>\n        {/* Check that the lesson object exists */}\n        {Object.keys(lesson).length > 0 && (\n          <ul>\n            {/* Using getter for lesson Object to display name */}\n            {lessons.map((lesson) => (\n              <li key={\"1\" + lesson.id}> {lesson.id} </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      {/* Stateless Child component passing up events from form */}\n      <MainForm onClick={onClickHandler} onChangeTitle={onChangeTitleHandler} onChangeContent={onChangeContentHandler} />\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}