{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPushStatus = getPushStatus;\nexports.send = send;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n/**\n * @flow\n */\n/*:: import type { WhereClause } from './ParseQuery';*/\n/*:: import type { FullOptions } from './RESTController';*/\n/*:: export type PushData = {\n  where?: WhereClause | ParseQuery,\n  push_time?: Date | string,\n  expiration_time?: Date | string,\n  expiration_interval?: number,\n};*/\n/**\n * Contains functions to deal with Push in Parse.\n *\n * @class Parse.Push\n * @static\n * @hideconstructor\n */\n/**\n * Sends a push notification.\n * **Available in Cloud Code only.**\n *\n * See {@link https://docs.parseplatform.org/js/guide/#push-notifications Push Notification Guide}\n *\n * @function send\n * @name Parse.Push.send\n * @param {object} data -  The data of the push notification. Valid fields\n * are:\n *   <ol>\n *     <li>channels - An Array of channels to push to.</li>\n *     <li>push_time - A Date object for when to send the push.</li>\n *     <li>expiration_time -  A Date object for when to expire\n *         the push.</li>\n *     <li>expiration_interval - The seconds from now to expire the push.</li>\n *     <li>where - A Parse.Query over Parse.Installation that is used to match\n *         a set of installations to push to.</li>\n *     <li>data - The data to send as part of the push.</li>\n *   <ol>\n * @param {object} options Valid options\n * are:<ul>\n *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n *     be used for this request.\n * </ul>\n * @returns {Promise} A promise that is fulfilled when the push request\n *     completes.\n */\nfunction send(data /*: PushData*/) /*: Promise*/{\n  var options /*:: ?: FullOptions*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (data.where && data.where instanceof _ParseQuery.default) {\n    data.where = data.where.toJSON().where;\n  }\n  if (data.push_time && (0, _typeof2.default)(data.push_time) === 'object') {\n    data.push_time = data.push_time.toJSON();\n  }\n  if (data.expiration_time && (0, _typeof2.default)(data.expiration_time) === 'object') {\n    data.expiration_time = data.expiration_time.toJSON();\n  }\n  if (data.expiration_time && data.expiration_interval) {\n    throw new Error('expiration_time and expiration_interval cannot both be set.');\n  }\n  var pushOptions = {\n    useMasterKey: true\n  };\n  if (options.hasOwnProperty('useMasterKey')) {\n    pushOptions.useMasterKey = options.useMasterKey;\n  }\n  return _CoreManager.default.getPushController().send(data, pushOptions);\n}\n\n/**\n * Gets push status by Id\n *\n * @function getPushStatus\n * @name Parse.Push.getPushStatus\n * @param {string} pushStatusId The Id of Push Status.\n * @param {object} options Valid options\n * are:<ul>\n *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n *     be used for this request.\n * </ul>\n * @returns {Parse.Object} Status of Push.\n */\nfunction getPushStatus(pushStatusId /*: string*/) /*: Promise<string>*/{\n  var options /*:: ?: FullOptions*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var pushOptions = {\n    useMasterKey: true\n  };\n  if (options.hasOwnProperty('useMasterKey')) {\n    pushOptions.useMasterKey = options.useMasterKey;\n  }\n  var query = new _ParseQuery.default('_PushStatus');\n  return query.get(pushStatusId, pushOptions);\n}\nvar DefaultController = {\n  send: function (data /*: PushData*/, options /*:: ?: FullOptions*/) {\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n      var _response$_headers;\n      var response;\n      return _regenerator.default.wrap(function (_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options.returnStatus = true;\n            _context.next = 3;\n            return _CoreManager.default.getRESTController().request('POST', 'push', data, options);\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", (_response$_headers = response._headers) === null || _response$_headers === void 0 ? void 0 : _response$_headers['X-Parse-Push-Status-Id']);\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n};\n_CoreManager.default.setPushController(DefaultController);","map":{"version":3,"names":["_Object$defineProperty","require","_interopRequireDefault","exports","value","getPushStatus","send","_regenerator","_asyncToGenerator2","_typeof2","_CoreManager","_ParseQuery","data","options","arguments","length","undefined","where","default","toJSON","push_time","expiration_time","expiration_interval","Error","pushOptions","useMasterKey","hasOwnProperty","getPushController","pushStatusId","query","get","DefaultController","mark","_callee","_response$_headers","response","wrap","_context","prev","next","returnStatus","getRESTController","request","sent","abrupt","_headers","stop","setPushController"],"sources":["C:/Users/adasa/Desktop/devblrProject/webdev-project/node_modules/parse/lib/browser/Push.js"],"sourcesContent":["\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPushStatus = getPushStatus;\nexports.send = send;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n/**\n * @flow\n */\n/*:: import type { WhereClause } from './ParseQuery';*/\n/*:: import type { FullOptions } from './RESTController';*/\n/*:: export type PushData = {\n  where?: WhereClause | ParseQuery,\n  push_time?: Date | string,\n  expiration_time?: Date | string,\n  expiration_interval?: number,\n};*/\n/**\n * Contains functions to deal with Push in Parse.\n *\n * @class Parse.Push\n * @static\n * @hideconstructor\n */\n/**\n * Sends a push notification.\n * **Available in Cloud Code only.**\n *\n * See {@link https://docs.parseplatform.org/js/guide/#push-notifications Push Notification Guide}\n *\n * @function send\n * @name Parse.Push.send\n * @param {object} data -  The data of the push notification. Valid fields\n * are:\n *   <ol>\n *     <li>channels - An Array of channels to push to.</li>\n *     <li>push_time - A Date object for when to send the push.</li>\n *     <li>expiration_time -  A Date object for when to expire\n *         the push.</li>\n *     <li>expiration_interval - The seconds from now to expire the push.</li>\n *     <li>where - A Parse.Query over Parse.Installation that is used to match\n *         a set of installations to push to.</li>\n *     <li>data - The data to send as part of the push.</li>\n *   <ol>\n * @param {object} options Valid options\n * are:<ul>\n *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n *     be used for this request.\n * </ul>\n * @returns {Promise} A promise that is fulfilled when the push request\n *     completes.\n */\nfunction send(data /*: PushData*/) /*: Promise*/{\n  var options /*:: ?: FullOptions*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (data.where && data.where instanceof _ParseQuery.default) {\n    data.where = data.where.toJSON().where;\n  }\n  if (data.push_time && (0, _typeof2.default)(data.push_time) === 'object') {\n    data.push_time = data.push_time.toJSON();\n  }\n  if (data.expiration_time && (0, _typeof2.default)(data.expiration_time) === 'object') {\n    data.expiration_time = data.expiration_time.toJSON();\n  }\n  if (data.expiration_time && data.expiration_interval) {\n    throw new Error('expiration_time and expiration_interval cannot both be set.');\n  }\n  var pushOptions = {\n    useMasterKey: true\n  };\n  if (options.hasOwnProperty('useMasterKey')) {\n    pushOptions.useMasterKey = options.useMasterKey;\n  }\n  return _CoreManager.default.getPushController().send(data, pushOptions);\n}\n\n/**\n * Gets push status by Id\n *\n * @function getPushStatus\n * @name Parse.Push.getPushStatus\n * @param {string} pushStatusId The Id of Push Status.\n * @param {object} options Valid options\n * are:<ul>\n *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n *     be used for this request.\n * </ul>\n * @returns {Parse.Object} Status of Push.\n */\nfunction getPushStatus(pushStatusId /*: string*/) /*: Promise<string>*/{\n  var options /*:: ?: FullOptions*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var pushOptions = {\n    useMasterKey: true\n  };\n  if (options.hasOwnProperty('useMasterKey')) {\n    pushOptions.useMasterKey = options.useMasterKey;\n  }\n  var query = new _ParseQuery.default('_PushStatus');\n  return query.get(pushStatusId, pushOptions);\n}\nvar DefaultController = {\n  send: function (data /*: PushData*/, options /*:: ?: FullOptions*/) {\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n      var _response$_headers;\n      var response;\n      return _regenerator.default.wrap(function (_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options.returnStatus = true;\n            _context.next = 3;\n            return _CoreManager.default.getRESTController().request('POST', 'push', data, options);\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", (_response$_headers = response._headers) === null || _response$_headers === void 0 ? void 0 : _response$_headers['X-Parse-Push-Status-Id']);\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n};\n_CoreManager.default.setPushController(DefaultController);"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8DAA8D,CAAC;AACpG,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,sDAAsD,CAAC;AAC5FD,sBAAsB,CAACG,OAAO,EAAE,YAAY,EAAE;EAC5CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,aAAa,GAAGA,aAAa;AACrCF,OAAO,CAACG,IAAI,GAAGA,IAAI;AACnB,IAAIC,YAAY,GAAGL,sBAAsB,CAACD,OAAO,CAAC,oCAAoC,CAAC,CAAC;AACxF,IAAIO,kBAAkB,GAAGN,sBAAsB,CAACD,OAAO,CAAC,iDAAiD,CAAC,CAAC;AAC3G,IAAIQ,QAAQ,GAAGP,sBAAsB,CAACD,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACvF,IAAIS,YAAY,GAAGR,sBAAsB,CAACD,OAAO,CAAC,eAAe,CAAC,CAAC;AACnE,IAAIU,WAAW,GAAGT,sBAAsB,CAACD,OAAO,CAAC,cAAc,CAAC,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,IAAIA,CAACM,IAAI,CAAC,gBAAgB,aAAa;EAC9C,IAAIC,OAAO,CAAC,wBAAwBC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1G,IAAIF,IAAI,CAACK,KAAK,IAAIL,IAAI,CAACK,KAAK,YAAYN,WAAW,CAACO,OAAO,EAAE;IAC3DN,IAAI,CAACK,KAAK,GAAGL,IAAI,CAACK,KAAK,CAACE,MAAM,CAAC,CAAC,CAACF,KAAK;EACxC;EACA,IAAIL,IAAI,CAACQ,SAAS,IAAI,CAAC,CAAC,EAAEX,QAAQ,CAACS,OAAO,EAAEN,IAAI,CAACQ,SAAS,CAAC,KAAK,QAAQ,EAAE;IACxER,IAAI,CAACQ,SAAS,GAAGR,IAAI,CAACQ,SAAS,CAACD,MAAM,CAAC,CAAC;EAC1C;EACA,IAAIP,IAAI,CAACS,eAAe,IAAI,CAAC,CAAC,EAAEZ,QAAQ,CAACS,OAAO,EAAEN,IAAI,CAACS,eAAe,CAAC,KAAK,QAAQ,EAAE;IACpFT,IAAI,CAACS,eAAe,GAAGT,IAAI,CAACS,eAAe,CAACF,MAAM,CAAC,CAAC;EACtD;EACA,IAAIP,IAAI,CAACS,eAAe,IAAIT,IAAI,CAACU,mBAAmB,EAAE;IACpD,MAAM,IAAIC,KAAK,CAAC,6DAA6D,CAAC;EAChF;EACA,IAAIC,WAAW,GAAG;IAChBC,YAAY,EAAE;EAChB,CAAC;EACD,IAAIZ,OAAO,CAACa,cAAc,CAAC,cAAc,CAAC,EAAE;IAC1CF,WAAW,CAACC,YAAY,GAAGZ,OAAO,CAACY,YAAY;EACjD;EACA,OAAOf,YAAY,CAACQ,OAAO,CAACS,iBAAiB,CAAC,CAAC,CAACrB,IAAI,CAACM,IAAI,EAAEY,WAAW,CAAC;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASnB,aAAaA,CAACuB,YAAY,CAAC,cAAc,qBAAqB;EACrE,IAAIf,OAAO,CAAC,wBAAwBC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1G,IAAIU,WAAW,GAAG;IAChBC,YAAY,EAAE;EAChB,CAAC;EACD,IAAIZ,OAAO,CAACa,cAAc,CAAC,cAAc,CAAC,EAAE;IAC1CF,WAAW,CAACC,YAAY,GAAGZ,OAAO,CAACY,YAAY;EACjD;EACA,IAAII,KAAK,GAAG,IAAIlB,WAAW,CAACO,OAAO,CAAC,aAAa,CAAC;EAClD,OAAOW,KAAK,CAACC,GAAG,CAACF,YAAY,EAAEJ,WAAW,CAAC;AAC7C;AACA,IAAIO,iBAAiB,GAAG;EACtBzB,IAAI,EAAE,SAAAA,CAAUM,IAAI,CAAC,gBAAgBC,OAAO,CAAC,uBAAuB;IAClE,OAAO,CAAC,CAAC,EAAEL,kBAAkB,CAACU,OAAO,GAAG,aAAaX,YAAY,CAACW,OAAO,CAACc,IAAI,CAAC,SAASC,OAAOA,CAAA,EAAG;MAChG,IAAIC,kBAAkB;MACtB,IAAIC,QAAQ;MACZ,OAAO5B,YAAY,CAACW,OAAO,CAACkB,IAAI,CAAC,UAAUC,QAAQ,EAAE;QACnD,OAAO,CAAC,EAAE,QAAQA,QAAQ,CAACC,IAAI,GAAGD,QAAQ,CAACE,IAAI;UAC7C,KAAK,CAAC;YACJ1B,OAAO,CAAC2B,YAAY,GAAG,IAAI;YAC3BH,QAAQ,CAACE,IAAI,GAAG,CAAC;YACjB,OAAO7B,YAAY,CAACQ,OAAO,CAACuB,iBAAiB,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE9B,IAAI,EAAEC,OAAO,CAAC;UACxF,KAAK,CAAC;YACJsB,QAAQ,GAAGE,QAAQ,CAACM,IAAI;YACxB,OAAON,QAAQ,CAACO,MAAM,CAAC,QAAQ,EAAE,CAACV,kBAAkB,GAAGC,QAAQ,CAACU,QAAQ,MAAM,IAAI,IAAIX,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAAC,wBAAwB,CAAC,CAAC;UAC9K,KAAK,CAAC;UACN,KAAK,KAAK;YACR,OAAOG,QAAQ,CAACS,IAAI,CAAC,CAAC;QAC1B;MACF,CAAC,EAAEb,OAAO,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC;EACP;AACF,CAAC;AACDvB,YAAY,CAACQ,OAAO,CAAC6B,iBAAiB,CAAChB,iBAAiB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}