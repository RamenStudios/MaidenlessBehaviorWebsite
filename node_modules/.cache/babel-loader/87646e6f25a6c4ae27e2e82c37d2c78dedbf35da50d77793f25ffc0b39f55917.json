{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adasa\\\\Desktop\\\\devblrProject\\\\webdev-project\\\\src\\\\Components\\\\Main\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { createPost, getAllPosts, getById, removePost } from \"../../Common/Services/LearnService\";\nimport PostForm from \"./PostForm\";\n\n/* ADAPTED FROM LECTURE 14 EXAMPLE */\n\n/* STATEFUL PARENT COMPONENT */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  // Variables in the state to hold data\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState([]);\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n\n  // UseEffect to run when the page loads to\n  // obtain async data and render\n  useEffect(() => {\n    getAllPosts().then(posts => {\n      setPosts(posts);\n    });\n\n    // getById(\"xm4edVKNUF\").then((post) => {\n    //   console.log(post);\n    //   setPost(post);\n    // });\n  }, []);\n\n  // Flags in the state to watch for add/remove updates\n  const [add, setAdd] = useState(false);\n  const [remove, setRemove] = useState(\"\");\n\n  // UseEffect that runs when changes\n  // are made to the state variables/flags\n  useEffect(() => {\n    // Check for add flag and make sure title + content state variables are defined\n    if (title && content && add) {\n      createPost(title, content).then(newPost => {\n        setAdd(false);\n        // Add the newly created post to the posts array\n        // to render the new list of posts (thru spread/concatination)\n        setPosts([...posts, newPost]);\n\n        //Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\n        //posts = posts.push(post)\n        //setPosts(posts)\n      });\n    }\n\n    // Check if remove state variable is holding an ID\n    if (remove.length > 0) {\n      //Filter the old posts list to take out selected post\n      const newPosts = posts.filter(post => post.id !== remove);\n      setPosts(newPosts);\n      removePost(remove).then(() => {\n        console.log(\"Removed post with ID: \", remove);\n      });\n      // Reset remove state variable\n      setRemove(\"\");\n    }\n  }, [title, content, posts, add, remove]);\n\n  // Handler to handle event passed from child submit button\n  const onClickHandler = e => {\n    e.preventDefault();\n    // Trigger add flag to create post and\n    // re-render list with new post\n    setAdd(true);\n  };\n\n  // Handler to track changes to the child input text for TITLE\n  const onChangeTitleHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    // Continuously updating values to be added on submit\n    setTitle(e.target.value);\n  };\n\n  // Handler to track changes to the child input text for CONTENT\n  const onChangeContentHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    // Continuously updating values to be added on submit\n    setContent(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [post.get(\"title\"), \": \", post.get(\"content\")]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                // Set remove variable and trigger re-render\n                setRemove(post.id);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Post by ID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), posts.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", post.id, \": \", post.get(\"title\"), \" \"]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      onClick: onClickHandler,\n      onChangeTitle: onChangeTitleHandler,\n      onChangeContent: onChangeContentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"a1S+mcLqQ9Oz8g53GNrMjCu+JkQ=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","createPost","getAllPosts","getById","removePost","PostForm","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","post","setPost","title","setTitle","content","setContent","then","add","setAdd","remove","setRemove","newPost","length","newPosts","filter","id","console","log","onClickHandler","e","preventDefault","onChangeTitleHandler","target","value","onChangeContentHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","map","get","onClick","onChangeTitle","onChangeContent","_c","$RefreshReg$"],"sources":["C:/Users/adasa/Desktop/devblrProject/webdev-project/src/Components/Main/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  createPost,\r\n  getAllPosts,\r\n  getById,\r\n  removePost\r\n} from \"../../Common/Services/LearnService\";\r\nimport PostForm from \"./PostForm\";\r\n\r\n/* ADAPTED FROM LECTURE 14 EXAMPLE */\r\n\r\n/* STATEFUL PARENT COMPONENT */\r\nconst PostList = () => {\r\n  // Variables in the state to hold data\r\n  const [posts, setPosts] = useState([]);\r\n  const [post, setPost] = useState([]);\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n\r\n  // UseEffect to run when the page loads to\r\n  // obtain async data and render\r\n  useEffect(() => {\r\n    getAllPosts().then((posts) => {\r\n      setPosts(posts);\r\n    });\r\n\r\n    // getById(\"xm4edVKNUF\").then((post) => {\r\n    //   console.log(post);\r\n    //   setPost(post);\r\n    // });\r\n  }, []);\r\n\r\n  // Flags in the state to watch for add/remove updates\r\n  const [add, setAdd] = useState(false);\r\n  const [remove, setRemove] = useState(\"\");\r\n\r\n  // UseEffect that runs when changes\r\n  // are made to the state variables/flags\r\n  useEffect(() => {\r\n    // Check for add flag and make sure title + content state variables are defined\r\n    if (title && content && add) {\r\n      createPost(title, content).then((newPost) => {\r\n        setAdd(false);\r\n        // Add the newly created post to the posts array\r\n        // to render the new list of posts (thru spread/concatination)\r\n        setPosts([...posts, newPost]);\r\n\r\n        //Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\r\n        //posts = posts.push(post)\r\n        //setPosts(posts)\r\n      });\r\n    }\r\n\r\n    // Check if remove state variable is holding an ID\r\n    if (remove.length > 0) {\r\n      //Filter the old posts list to take out selected post\r\n      const newPosts = posts.filter((post) => post.id !== remove);\r\n      setPosts(newPosts);\r\n\r\n      removePost(remove).then(() => {\r\n        console.log(\"Removed post with ID: \", remove);\r\n      });\r\n      // Reset remove state variable\r\n      setRemove(\"\");\r\n    }\r\n  }, [title, content, posts, add, remove]);\r\n\r\n  // Handler to handle event passed from child submit button\r\n  const onClickHandler = (e) => {\r\n    e.preventDefault();\r\n    // Trigger add flag to create post and\r\n    // re-render list with new post\r\n    setAdd(true);\r\n  };\r\n\r\n  // Handler to track changes to the child input text for TITLE\r\n  const onChangeTitleHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    // Continuously updating values to be added on submit\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  // Handler to track changes to the child input text for CONTENT\r\n  const onChangeContentHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    // Continuously updating values to be added on submit\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <div>\r\n        {posts.length > 0 && (\r\n          <ul>\r\n            {posts.map((post) => (\r\n              <div>\r\n                <span>\r\n                  {/* Using getter for post Object to display title and content */}\r\n                  <li key={post.id}>{post.get(\"title\")}: {post.get(\"content\")}</li>{\" \"}\r\n                  {/* Button with inline click handler to obtain \r\n                  instance of post for remove state variable*/}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      // Set remove variable and trigger re-render\r\n                      setRemove(post.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <p> Post by ID: </p>\r\n        {/* Check that the post object exists */}\r\n        {posts.length > 0 && (\r\n          <ul>\r\n            {/* Using getter for post Object to display id */}\r\n            {posts.map((post) => (\r\n              <li key={post.id}> {post.id}: {post.get(\"title\")} </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      {/* Stateless Child component passing up events from form */}\r\n      <PostForm onClick={onClickHandler} onChangeTitle={onChangeTitleHandler} onChangeContent={onChangeContentHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,UAAU,EACVC,WAAW,EACXC,OAAO,EACPC,UAAU,QACL,oCAAoC;AAC3C,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC;EACpC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC;;EAExC;EACA;EACAD,SAAS,CAAC,MAAM;IACdG,WAAW,CAAC,CAAC,CAACgB,IAAI,CAAER,KAAK,IAAK;MAC5BC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;;IAEF;IACA;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACAD,SAAS,CAAC,MAAM;IACd;IACA,IAAIe,KAAK,IAAIE,OAAO,IAAIG,GAAG,EAAE;MAC3BlB,UAAU,CAACa,KAAK,EAAEE,OAAO,CAAC,CAACE,IAAI,CAAEK,OAAO,IAAK;QAC3CH,MAAM,CAAC,KAAK,CAAC;QACb;QACA;QACAT,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEa,OAAO,CAAC,CAAC;;QAE7B;QACA;QACA;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIF,MAAM,CAACG,MAAM,GAAG,CAAC,EAAE;MACrB;MACA,MAAMC,QAAQ,GAAGf,KAAK,CAACgB,MAAM,CAAEd,IAAI,IAAKA,IAAI,CAACe,EAAE,KAAKN,MAAM,CAAC;MAC3DV,QAAQ,CAACc,QAAQ,CAAC;MAElBrB,UAAU,CAACiB,MAAM,CAAC,CAACH,IAAI,CAAC,MAAM;QAC5BU,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAER,MAAM,CAAC;MAC/C,CAAC,CAAC;MACF;MACAC,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC,EAAE,CAACR,KAAK,EAAEE,OAAO,EAAEN,KAAK,EAAES,GAAG,EAAEE,MAAM,CAAC,CAAC;;EAExC;EACA,MAAMS,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACAZ,MAAM,CAAC,IAAI,CAAC;EACd,CAAC;;EAED;EACA,MAAMa,oBAAoB,GAAIF,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,OAAO,CAACC,GAAG,CAACE,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3B;IACApB,QAAQ,CAACgB,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAIL,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,OAAO,CAACC,GAAG,CAACE,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3B;IACAlB,UAAU,CAACc,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACE5B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlC,OAAA;MAAA8B,QAAA,EACG3B,KAAK,CAACc,MAAM,GAAG,CAAC,iBACfjB,OAAA;QAAA8B,QAAA,EACG3B,KAAK,CAACgC,GAAG,CAAE9B,IAAI,iBACdL,OAAA;UAAA8B,QAAA,eACE9B,OAAA;YAAA8B,QAAA,gBAEE9B,OAAA;cAAA8B,QAAA,GAAmBzB,IAAI,CAAC+B,GAAG,CAAC,OAAO,CAAC,EAAC,IAAE,EAAC/B,IAAI,CAAC+B,GAAG,CAAC,SAAS,CAAC;YAAA,GAAlD/B,IAAI,CAACe,EAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgD,CAAC,EAAC,GAAG,eAGrElC,OAAA;cACEqC,OAAO,EAAGb,CAAC,IAAK;gBACd;gBACAT,SAAS,CAACV,IAAI,CAACe,EAAE,CAAC;cACpB,CAAE;cAAAU,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNlC,OAAA;MAAA8B,QAAA,gBACE9B,OAAA;QAAA8B,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEnB/B,KAAK,CAACc,MAAM,GAAG,CAAC,iBACfjB,OAAA;QAAA8B,QAAA,EAEG3B,KAAK,CAACgC,GAAG,CAAE9B,IAAI,iBACdL,OAAA;UAAA8B,QAAA,GAAkB,GAAC,EAACzB,IAAI,CAACe,EAAE,EAAC,IAAE,EAACf,IAAI,CAAC+B,GAAG,CAAC,OAAO,CAAC,EAAC,GAAC;QAAA,GAAzC/B,IAAI,CAACe,EAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsC,CACvD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENlC,OAAA,CAACF,QAAQ;MAACuC,OAAO,EAAEd,cAAe;MAACe,aAAa,EAAEZ,oBAAqB;MAACa,eAAe,EAAEV;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChH,CAAC;AAEV,CAAC;AAAChC,EAAA,CA1HID,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AA4Hd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}