{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{createPost,getAllPosts,getById,removePost}from\"../../Common/Services/LearnService\";import PostForm from\"./PostForm\";/* ADAPTED FROM LECTURE 14 EXAMPLE */ /* STATEFUL PARENT COMPONENT */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PostList=()=>{// Variables in the state to hold data\nconst[posts,setPosts]=useState([]);const[post,setPost]=useState([]);const[title,setTitle]=useState();const[content,setContent]=useState();// UseEffect to run when the page loads to\n// obtain async data and render\nuseEffect(()=>{getAllPosts().then(posts=>{setPosts(posts);});// getById(\"xm4edVKNUF\").then((post) => {\n//   console.log(post);\n//   setPost(post);\n// });\n},[]);// Flags in the state to watch for add/remove updates\nconst[add,setAdd]=useState(false);const[remove,setRemove]=useState(\"\");// UseEffect that runs when changes\n// are made to the state variables/flags\nuseEffect(()=>{// Check for add flag and make sure title + content state variables are defined\nif(title&&content&&add){createPost(title,content).then(newPost=>{setAdd(false);// Add the newly created post to the posts array\n// to render the new list of posts (thru spread/concatination)\nsetPosts([...posts,newPost]);//Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\n//posts = posts.push(post)\n//setPosts(posts)\n});}// Check if remove state variable is holding an ID\nif(remove.length>0){//Filter the old posts list to take out selected post\nconst newPosts=posts.filter(post=>post.id!==remove);setPosts(newPosts);removePost(remove).then(()=>{console.log(\"Removed post with ID: \",remove);});// Reset remove state variable\nsetRemove(\"\");}},[title,content,posts,add,remove]);// Handler to handle event passed from child submit button\nconst onClickHandler=e=>{e.preventDefault();// Trigger add flag to create post and\n// re-render list with new post\nsetAdd(true);};// Handler to track changes to the child input text for TITLE\nconst onChangeTitleHandler=e=>{e.preventDefault();console.log(e.target.value);// Continuously updating values to be added on submit\nsetTitle(e.target.value);};// Handler to track changes to the child input text for CONTENT\nconst onChangeContentHandler=e=>{e.preventDefault();console.log(e.target.value);// Continuously updating values to be added on submit\nsetContent(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{children:posts.length>0&&/*#__PURE__*/_jsx(\"ul\",{children:posts.map(post=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[post.get(\"title\"),\": \",post.get(\"content\")]},post.id),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:e=>{// Set remove variable and trigger re-render\nsetRemove(post.id);},children:\"Delete\"})]})}))})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\" Post by ID: \"}),posts.length>0&&/*#__PURE__*/_jsx(\"ul\",{children:posts.map(post=>/*#__PURE__*/_jsxs(\"li\",{children:[\" \",post.id,\": \",post.get(\"title\"),\" \"]},post.id))})]}),/*#__PURE__*/_jsx(PostForm,{onClick:onClickHandler,onChangeTitle:onChangeTitleHandler,onChangeContent:onChangeContentHandler})]});};export default PostList;","map":{"version":3,"names":["React","useEffect","useState","createPost","getAllPosts","getById","removePost","PostForm","jsx","_jsx","jsxs","_jsxs","PostList","posts","setPosts","post","setPost","title","setTitle","content","setContent","then","add","setAdd","remove","setRemove","newPost","length","newPosts","filter","id","console","log","onClickHandler","e","preventDefault","onChangeTitleHandler","target","value","onChangeContentHandler","children","map","get","onClick","onChangeTitle","onChangeContent"],"sources":["C:/Users/adasa/Desktop/humanResources/MaidenlessWebsite/src/Components/Main/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  createPost,\r\n  getAllPosts,\r\n  getById,\r\n  removePost\r\n} from \"../../Common/Services/LearnService\";\r\nimport PostForm from \"./PostForm\";\r\n\r\n/* ADAPTED FROM LECTURE 14 EXAMPLE */\r\n\r\n/* STATEFUL PARENT COMPONENT */\r\nconst PostList = () => {\r\n  // Variables in the state to hold data\r\n  const [posts, setPosts] = useState([]);\r\n  const [post, setPost] = useState([]);\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n\r\n  // UseEffect to run when the page loads to\r\n  // obtain async data and render\r\n  useEffect(() => {\r\n    getAllPosts().then((posts) => {\r\n      setPosts(posts);\r\n    });\r\n\r\n    // getById(\"xm4edVKNUF\").then((post) => {\r\n    //   console.log(post);\r\n    //   setPost(post);\r\n    // });\r\n  }, []);\r\n\r\n  // Flags in the state to watch for add/remove updates\r\n  const [add, setAdd] = useState(false);\r\n  const [remove, setRemove] = useState(\"\");\r\n\r\n  // UseEffect that runs when changes\r\n  // are made to the state variables/flags\r\n  useEffect(() => {\r\n    // Check for add flag and make sure title + content state variables are defined\r\n    if (title && content && add) {\r\n      createPost(title, content).then((newPost) => {\r\n        setAdd(false);\r\n        // Add the newly created post to the posts array\r\n        // to render the new list of posts (thru spread/concatination)\r\n        setPosts([...posts, newPost]);\r\n\r\n        //Note: CANNOT MANIPULATE STATE ARRAY DIRECTLY\r\n        //posts = posts.push(post)\r\n        //setPosts(posts)\r\n      });\r\n    }\r\n\r\n    // Check if remove state variable is holding an ID\r\n    if (remove.length > 0) {\r\n      //Filter the old posts list to take out selected post\r\n      const newPosts = posts.filter((post) => post.id !== remove);\r\n      setPosts(newPosts);\r\n\r\n      removePost(remove).then(() => {\r\n        console.log(\"Removed post with ID: \", remove);\r\n      });\r\n      // Reset remove state variable\r\n      setRemove(\"\");\r\n    }\r\n  }, [title, content, posts, add, remove]);\r\n\r\n  // Handler to handle event passed from child submit button\r\n  const onClickHandler = (e) => {\r\n    e.preventDefault();\r\n    // Trigger add flag to create post and\r\n    // re-render list with new post\r\n    setAdd(true);\r\n  };\r\n\r\n  // Handler to track changes to the child input text for TITLE\r\n  const onChangeTitleHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    // Continuously updating values to be added on submit\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  // Handler to track changes to the child input text for CONTENT\r\n  const onChangeContentHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    // Continuously updating values to be added on submit\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <div>\r\n        {posts.length > 0 && (\r\n          <ul>\r\n            {posts.map((post) => (\r\n              <div>\r\n                <span>\r\n                  {/* Using getter for post Object to display title and content */}\r\n                  <li key={post.id}>{post.get(\"title\")}: {post.get(\"content\")}</li>{\" \"}\r\n                  {/* Button with inline click handler to obtain \r\n                  instance of post for remove state variable*/}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      // Set remove variable and trigger re-render\r\n                      setRemove(post.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <p> Post by ID: </p>\r\n        {/* Check that the post object exists */}\r\n        {posts.length > 0 && (\r\n          <ul>\r\n            {/* Using getter for post Object to display id */}\r\n            {posts.map((post) => (\r\n              <li key={post.id}> {post.id}: {post.get(\"title\")} </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      {/* Stateless Child component passing up events from form */}\r\n      <PostForm onClick={onClickHandler} onChangeTitle={onChangeTitleHandler} onChangeContent={onChangeContentHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}