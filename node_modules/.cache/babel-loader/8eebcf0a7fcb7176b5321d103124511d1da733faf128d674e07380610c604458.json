{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime-corejs3/helpers/typeof\");\nvar _WeakMap = require(\"@babel/runtime-corejs3/core-js-stable/weak-map\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _decode2 = _interopRequireDefault(require(\"./decode\"));\nvar _encode2 = _interopRequireDefault(require(\"./encode\"));\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\nvar _IndexedDBStorageController = _interopRequireDefault(require(\"./IndexedDBStorageController\"));\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\nvar Analytics = _interopRequireWildcard(require(\"./Analytics\"));\nvar _AnonymousUtils = _interopRequireDefault(require(\"./AnonymousUtils\"));\nvar Cloud = _interopRequireWildcard(require(\"./Cloud\"));\nvar _ParseCLP = _interopRequireDefault(require(\"./ParseCLP\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _EventEmitter = _interopRequireDefault(require(\"./EventEmitter\"));\nvar _ParseConfig = _interopRequireDefault(require(\"./ParseConfig\"));\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nvar _FacebookUtils = _interopRequireDefault(require(\"./FacebookUtils\"));\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\nvar _ParsePolygon = _interopRequireDefault(require(\"./ParsePolygon\"));\nvar _ParseInstallation = _interopRequireDefault(require(\"./ParseInstallation\"));\nvar _LocalDatastore = _interopRequireDefault(require(\"./LocalDatastore\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\nvar Push = _interopRequireWildcard(require(\"./Push\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\nvar _ParseRelation = _interopRequireDefault(require(\"./ParseRelation\"));\nvar _ParseRole = _interopRequireDefault(require(\"./ParseRole\"));\nvar _ParseSchema = _interopRequireDefault(require(\"./ParseSchema\"));\nvar _ParseSession = _interopRequireDefault(require(\"./ParseSession\"));\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\nvar _ParseLiveQuery = _interopRequireDefault(require(\"./ParseLiveQuery\"));\nvar _LiveQueryClient = _interopRequireDefault(require(\"./LiveQueryClient\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof _WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new _WeakMap();\n  var cacheNodeInterop = new _WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = _Object$defineProperty && _Object$getOwnPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        _Object$defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n/**\n * Contains all Parse API classes and functions.\n *\n * @static\n * @global\n * @class\n * @hideconstructor\n*/\n\nvar Parse /*: ParseType*/ = {\n  ACL: _ParseACL.default,\n  Analytics: Analytics,\n  AnonymousUtils: _AnonymousUtils.default,\n  Cloud: Cloud,\n  CLP: _ParseCLP.default,\n  CoreManager: _CoreManager.default,\n  Config: _ParseConfig.default,\n  Error: _ParseError.default,\n  EventuallyQueue: _EventuallyQueue.default,\n  FacebookUtils: _FacebookUtils.default,\n  File: _ParseFile.default,\n  GeoPoint: _ParseGeoPoint.default,\n  Polygon: _ParsePolygon.default,\n  Installation: _ParseInstallation.default,\n  LocalDatastore: _LocalDatastore.default,\n  Object: _ParseObject.default,\n  Op: {\n    Set: ParseOp.SetOp,\n    Unset: ParseOp.UnsetOp,\n    Increment: ParseOp.IncrementOp,\n    Add: ParseOp.AddOp,\n    Remove: ParseOp.RemoveOp,\n    AddUnique: ParseOp.AddUniqueOp,\n    Relation: ParseOp.RelationOp\n  },\n  Push: Push,\n  Query: _ParseQuery.default,\n  Relation: _ParseRelation.default,\n  Role: _ParseRole.default,\n  Schema: _ParseSchema.default,\n  Session: _ParseSession.default,\n  Storage: _Storage.default,\n  User: _ParseUser.default,\n  LiveQueryClient: _LiveQueryClient.default,\n  LiveQuery: undefined,\n  IndexedDB: undefined,\n  Hooks: undefined,\n  Parse: undefined,\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   *\n   * @param {string} applicationId Your Parse Application ID.\n   * @param {string} [javaScriptKey] Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {string} [masterKey] Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize: function (applicationId /*: string*/, javaScriptKey /*: string*/) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      /* eslint-disable no-console */\n      console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\n      /* eslint-enable no-console */\n    }\n    Parse._initialize(applicationId, javaScriptKey);\n  },\n  _initialize: function (applicationId /*: string*/, javaScriptKey /*: string*/, masterKey /*:: ?: string*/) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n    _CoreManager.default.setIfNeeded('EventEmitter', _EventEmitter.default);\n    Parse.LiveQuery = new _ParseLiveQuery.default();\n    _CoreManager.default.setIfNeeded('LiveQuery', Parse.LiveQuery);\n    Parse.IndexedDB = _CoreManager.default.setIfNeeded('IndexedDBStorageController', _IndexedDBStorageController.default);\n  },\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   *\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage: function (storage /*: any*/) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   *\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController: function (controller /*: any*/) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  },\n  /**\n   * Returns information regarding the current server's health\n   *\n   * @returns {Promise}\n   * @static\n   */\n  getServerHealth: function () {\n    return _CoreManager.default.getRESTController().request('GET', 'health');\n  },\n  /**\n   * @member {string} Parse.applicationId\n   * @static\n   */\n  set applicationId(value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  },\n  get applicationId() {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n  /**\n   * @member {string} Parse.javaScriptKey\n   * @static\n   */\n  set javaScriptKey(value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  },\n  get javaScriptKey() {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n  /**\n   * @member {string} Parse.masterKey\n   * @static\n   */\n  set masterKey(value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  },\n  get masterKey() {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n  /**\n   * @member {string} Parse.serverURL\n   * @static\n   */\n  set serverURL(value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  },\n  get serverURL() {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n  /**\n   * @member {string} Parse.serverAuthToken\n   * @static\n   */\n  set serverAuthToken(value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  },\n  get serverAuthToken() {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n  /**\n   * @member {string} Parse.serverAuthType\n   * @static\n   */\n  set serverAuthType(value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  },\n  get serverAuthType() {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n  /**\n   * @member {string} Parse.liveQueryServerURL\n   * @static\n   */\n  set liveQueryServerURL(value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  },\n  get liveQueryServerURL() {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n  /**\n   * @member {boolean} Parse.encryptedUser\n   * @static\n   */\n  set encryptedUser(value /*: boolean*/) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  },\n  get encryptedUser() {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n  /**\n   * @member {string} Parse.secret\n   * @static\n   */\n  set secret(value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  },\n  get secret() {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n  /**\n   * @member {boolean} Parse.idempotency\n   * @static\n   */\n  set idempotency(value) {\n    _CoreManager.default.set('IDEMPOTENCY', value);\n  },\n  get idempotency() {\n    return _CoreManager.default.get('IDEMPOTENCY');\n  },\n  /**\n   * @member {boolean} Parse.allowCustomObjectId\n   * @static\n   */\n  set allowCustomObjectId(value) {\n    _CoreManager.default.set('ALLOW_CUSTOM_OBJECT_ID', value);\n  },\n  get allowCustomObjectId() {\n    return _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n  },\n  _request: function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _CoreManager.default.getRESTController().request.apply(null, args);\n  },\n  _ajax: function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return _CoreManager.default.getRESTController().ajax.apply(null, args);\n  },\n  // We attempt to match the signatures of the legacy versions of these methods\n  _decode: function (_, value) {\n    return (0, _decode2.default)(value);\n  },\n  _encode: function (value, _, disallowObjects) {\n    return (0, _encode2.default)(value, disallowObjects);\n  },\n  _getInstallationId: function () {\n    return _CoreManager.default.getInstallationController().currentInstallationId();\n  },\n  /**\n   * Enable pinning in your application.\n   * This must be called after `Parse.initialize` in your application.\n   *\n   * @param [polling] Allow pinging the server /health endpoint. Default true\n   * @param [ms] Milliseconds to ping the server. Default 2000ms\n   * @static\n   */\n  enableLocalDatastore: function () {\n    var polling = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var ms /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n    if (!this.applicationId) {\n      console.log(\"'enableLocalDataStore' must be called after 'initialize'\");\n      return;\n    }\n    if (!this.LocalDatastore.isEnabled) {\n      this.LocalDatastore.isEnabled = true;\n      if (polling) {\n        _EventuallyQueue.default.poll(ms);\n      }\n    }\n  },\n  /**\n   * Flag that indicates whether Local Datastore is enabled.\n   *\n   * @static\n   * @returns {boolean}\n   */\n  isLocalDatastoreEnabled: function () {\n    return this.LocalDatastore.isEnabled;\n  },\n  /**\n   * Gets all contents from Local Datastore\n   *\n   * <pre>\n   * await Parse.dumpLocalDatastore();\n   * </pre>\n   *\n   * @static\n   * @returns {object}\n   */\n  dumpLocalDatastore: function () {\n    if (!this.LocalDatastore.isEnabled) {\n      console.log('Parse.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n      return _promise.default.resolve({});\n    } else {\n      return Parse.LocalDatastore._getAllContents();\n    }\n  },\n  /**\n   * Enable the current user encryption.\n   * This must be called before login any user.\n   *\n   * @static\n   */\n  enableEncryptedUser: function () {\n    this.encryptedUser = true;\n  },\n  /**\n   * Flag that indicates whether Encrypted User is enabled.\n   *\n   * @static\n   * @returns {boolean}\n   */\n  isEncryptedUserEnabled: function () {\n    return this.encryptedUser;\n  }\n};\n_CoreManager.default.setCryptoController(_CryptoController.default);\n_CoreManager.default.setInstallationController(_InstallationController.default);\n_CoreManager.default.setRESTController(_RESTController.default);\n// For legacy requires, of the form `var Parse = require('parse').Parse`\nParse.Parse = Parse;\nmodule.exports = Parse;\nvar _default = Parse;\nexports.default = _default;","map":{"version":3,"names":["_typeof","require","_WeakMap","_Object$defineProperty","_Object$getOwnPropertyDescriptor","_interopRequireDefault","exports","value","default","_promise","_decode2","_encode2","_CryptoController","_EventuallyQueue","_IndexedDBStorageController","_InstallationController","ParseOp","_interopRequireWildcard","_RESTController","_ParseACL","Analytics","_AnonymousUtils","Cloud","_ParseCLP","_CoreManager","_EventEmitter","_ParseConfig","_ParseError","_FacebookUtils","_ParseFile","_ParseGeoPoint","_ParsePolygon","_ParseInstallation","_LocalDatastore","_ParseObject","Push","_ParseQuery","_ParseRelation","_ParseRole","_ParseSchema","_ParseSession","_Storage","_ParseUser","_ParseLiveQuery","_LiveQueryClient","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","key","Object","prototype","hasOwnProperty","call","desc","set","Parse","ACL","AnonymousUtils","CLP","CoreManager","Config","Error","EventuallyQueue","FacebookUtils","File","GeoPoint","Polygon","Installation","LocalDatastore","Op","Set","SetOp","Unset","UnsetOp","Increment","IncrementOp","Add","AddOp","Remove","RemoveOp","AddUnique","AddUniqueOp","Relation","RelationOp","Query","Role","Schema","Session","Storage","User","LiveQueryClient","LiveQuery","undefined","IndexedDB","Hooks","initialize","applicationId","javaScriptKey","process","env","SERVER_RENDERING","console","log","_initialize","masterKey","setIfNeeded","setAsyncStorage","storage","setLocalDatastoreController","controller","getServerHealth","getRESTController","request","serverURL","serverAuthToken","serverAuthType","liveQueryServerURL","encryptedUser","secret","idempotency","allowCustomObjectId","_request","_len","arguments","length","args","Array","_key","apply","_ajax","_len2","_key2","ajax","_decode","_","_encode","disallowObjects","_getInstallationId","getInstallationController","currentInstallationId","enableLocalDatastore","polling","ms","isEnabled","poll","isLocalDatastoreEnabled","dumpLocalDatastore","resolve","_getAllContents","enableEncryptedUser","isEncryptedUserEnabled","setCryptoController","setInstallationController","setRESTController","module","_default"],"sources":["C:/Users/adasa/Desktop/humanResources/MaidenlessWebsite/node_modules/parse/lib/browser/Parse.js"],"sourcesContent":["\"use strict\";\n\nvar _typeof = require(\"@babel/runtime-corejs3/helpers/typeof\");\nvar _WeakMap = require(\"@babel/runtime-corejs3/core-js-stable/weak-map\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _decode2 = _interopRequireDefault(require(\"./decode\"));\nvar _encode2 = _interopRequireDefault(require(\"./encode\"));\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\nvar _IndexedDBStorageController = _interopRequireDefault(require(\"./IndexedDBStorageController\"));\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\nvar Analytics = _interopRequireWildcard(require(\"./Analytics\"));\nvar _AnonymousUtils = _interopRequireDefault(require(\"./AnonymousUtils\"));\nvar Cloud = _interopRequireWildcard(require(\"./Cloud\"));\nvar _ParseCLP = _interopRequireDefault(require(\"./ParseCLP\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _EventEmitter = _interopRequireDefault(require(\"./EventEmitter\"));\nvar _ParseConfig = _interopRequireDefault(require(\"./ParseConfig\"));\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nvar _FacebookUtils = _interopRequireDefault(require(\"./FacebookUtils\"));\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\nvar _ParsePolygon = _interopRequireDefault(require(\"./ParsePolygon\"));\nvar _ParseInstallation = _interopRequireDefault(require(\"./ParseInstallation\"));\nvar _LocalDatastore = _interopRequireDefault(require(\"./LocalDatastore\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\nvar Push = _interopRequireWildcard(require(\"./Push\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\nvar _ParseRelation = _interopRequireDefault(require(\"./ParseRelation\"));\nvar _ParseRole = _interopRequireDefault(require(\"./ParseRole\"));\nvar _ParseSchema = _interopRequireDefault(require(\"./ParseSchema\"));\nvar _ParseSession = _interopRequireDefault(require(\"./ParseSession\"));\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\nvar _ParseLiveQuery = _interopRequireDefault(require(\"./ParseLiveQuery\"));\nvar _LiveQueryClient = _interopRequireDefault(require(\"./LiveQueryClient\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof _WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new _WeakMap();\n  var cacheNodeInterop = new _WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = _Object$defineProperty && _Object$getOwnPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        _Object$defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n/**\n * Contains all Parse API classes and functions.\n *\n * @static\n * @global\n * @class\n * @hideconstructor\n*/\n\nvar Parse /*: ParseType*/ = {\n  ACL: _ParseACL.default,\n  Analytics: Analytics,\n  AnonymousUtils: _AnonymousUtils.default,\n  Cloud: Cloud,\n  CLP: _ParseCLP.default,\n  CoreManager: _CoreManager.default,\n  Config: _ParseConfig.default,\n  Error: _ParseError.default,\n  EventuallyQueue: _EventuallyQueue.default,\n  FacebookUtils: _FacebookUtils.default,\n  File: _ParseFile.default,\n  GeoPoint: _ParseGeoPoint.default,\n  Polygon: _ParsePolygon.default,\n  Installation: _ParseInstallation.default,\n  LocalDatastore: _LocalDatastore.default,\n  Object: _ParseObject.default,\n  Op: {\n    Set: ParseOp.SetOp,\n    Unset: ParseOp.UnsetOp,\n    Increment: ParseOp.IncrementOp,\n    Add: ParseOp.AddOp,\n    Remove: ParseOp.RemoveOp,\n    AddUnique: ParseOp.AddUniqueOp,\n    Relation: ParseOp.RelationOp\n  },\n  Push: Push,\n  Query: _ParseQuery.default,\n  Relation: _ParseRelation.default,\n  Role: _ParseRole.default,\n  Schema: _ParseSchema.default,\n  Session: _ParseSession.default,\n  Storage: _Storage.default,\n  User: _ParseUser.default,\n  LiveQueryClient: _LiveQueryClient.default,\n  LiveQuery: undefined,\n  IndexedDB: undefined,\n  Hooks: undefined,\n  Parse: undefined,\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   *\n   * @param {string} applicationId Your Parse Application ID.\n   * @param {string} [javaScriptKey] Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {string} [masterKey] Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize: function (applicationId /*: string*/, javaScriptKey /*: string*/) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      /* eslint-disable no-console */\n      console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\n      /* eslint-enable no-console */\n    }\n\n    Parse._initialize(applicationId, javaScriptKey);\n  },\n  _initialize: function (applicationId /*: string*/, javaScriptKey /*: string*/, masterKey /*:: ?: string*/) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n    _CoreManager.default.setIfNeeded('EventEmitter', _EventEmitter.default);\n    Parse.LiveQuery = new _ParseLiveQuery.default();\n    _CoreManager.default.setIfNeeded('LiveQuery', Parse.LiveQuery);\n    Parse.IndexedDB = _CoreManager.default.setIfNeeded('IndexedDBStorageController', _IndexedDBStorageController.default);\n  },\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   *\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage: function (storage /*: any*/) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   *\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController: function (controller /*: any*/) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  },\n  /**\n   * Returns information regarding the current server's health\n   *\n   * @returns {Promise}\n   * @static\n   */\n  getServerHealth: function () {\n    return _CoreManager.default.getRESTController().request('GET', 'health');\n  },\n  /**\n   * @member {string} Parse.applicationId\n   * @static\n   */\n  set applicationId(value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  },\n  get applicationId() {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n  /**\n   * @member {string} Parse.javaScriptKey\n   * @static\n   */\n  set javaScriptKey(value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  },\n  get javaScriptKey() {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n  /**\n   * @member {string} Parse.masterKey\n   * @static\n   */\n  set masterKey(value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  },\n  get masterKey() {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n  /**\n   * @member {string} Parse.serverURL\n   * @static\n   */\n  set serverURL(value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  },\n  get serverURL() {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n  /**\n   * @member {string} Parse.serverAuthToken\n   * @static\n   */\n  set serverAuthToken(value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  },\n  get serverAuthToken() {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n  /**\n   * @member {string} Parse.serverAuthType\n   * @static\n   */\n  set serverAuthType(value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  },\n  get serverAuthType() {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n  /**\n   * @member {string} Parse.liveQueryServerURL\n   * @static\n   */\n  set liveQueryServerURL(value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  },\n  get liveQueryServerURL() {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n  /**\n   * @member {boolean} Parse.encryptedUser\n   * @static\n   */\n  set encryptedUser(value /*: boolean*/) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  },\n  get encryptedUser() {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n  /**\n   * @member {string} Parse.secret\n   * @static\n   */\n  set secret(value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  },\n  get secret() {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n  /**\n   * @member {boolean} Parse.idempotency\n   * @static\n   */\n  set idempotency(value) {\n    _CoreManager.default.set('IDEMPOTENCY', value);\n  },\n  get idempotency() {\n    return _CoreManager.default.get('IDEMPOTENCY');\n  },\n  /**\n   * @member {boolean} Parse.allowCustomObjectId\n   * @static\n   */\n  set allowCustomObjectId(value) {\n    _CoreManager.default.set('ALLOW_CUSTOM_OBJECT_ID', value);\n  },\n  get allowCustomObjectId() {\n    return _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n  },\n  _request: function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _CoreManager.default.getRESTController().request.apply(null, args);\n  },\n  _ajax: function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return _CoreManager.default.getRESTController().ajax.apply(null, args);\n  },\n  // We attempt to match the signatures of the legacy versions of these methods\n  _decode: function (_, value) {\n    return (0, _decode2.default)(value);\n  },\n  _encode: function (value, _, disallowObjects) {\n    return (0, _encode2.default)(value, disallowObjects);\n  },\n  _getInstallationId: function () {\n    return _CoreManager.default.getInstallationController().currentInstallationId();\n  },\n  /**\n   * Enable pinning in your application.\n   * This must be called after `Parse.initialize` in your application.\n   *\n   * @param [polling] Allow pinging the server /health endpoint. Default true\n   * @param [ms] Milliseconds to ping the server. Default 2000ms\n   * @static\n   */\n  enableLocalDatastore: function () {\n    var polling = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var ms /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n    if (!this.applicationId) {\n      console.log(\"'enableLocalDataStore' must be called after 'initialize'\");\n      return;\n    }\n    if (!this.LocalDatastore.isEnabled) {\n      this.LocalDatastore.isEnabled = true;\n      if (polling) {\n        _EventuallyQueue.default.poll(ms);\n      }\n    }\n  },\n  /**\n   * Flag that indicates whether Local Datastore is enabled.\n   *\n   * @static\n   * @returns {boolean}\n   */\n  isLocalDatastoreEnabled: function () {\n    return this.LocalDatastore.isEnabled;\n  },\n  /**\n   * Gets all contents from Local Datastore\n   *\n   * <pre>\n   * await Parse.dumpLocalDatastore();\n   * </pre>\n   *\n   * @static\n   * @returns {object}\n   */\n  dumpLocalDatastore: function () {\n    if (!this.LocalDatastore.isEnabled) {\n      console.log('Parse.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n      return _promise.default.resolve({});\n    } else {\n      return Parse.LocalDatastore._getAllContents();\n    }\n  },\n  /**\n   * Enable the current user encryption.\n   * This must be called before login any user.\n   *\n   * @static\n   */\n  enableEncryptedUser: function () {\n    this.encryptedUser = true;\n  },\n  /**\n   * Flag that indicates whether Encrypted User is enabled.\n   *\n   * @static\n   * @returns {boolean}\n   */\n  isEncryptedUserEnabled: function () {\n    return this.encryptedUser;\n  }\n};\n_CoreManager.default.setCryptoController(_CryptoController.default);\n_CoreManager.default.setInstallationController(_InstallationController.default);\n_CoreManager.default.setRESTController(_RESTController.default);\n// For legacy requires, of the form `var Parse = require('parse').Parse`\nParse.Parse = Parse;\nmodule.exports = Parse;\nvar _default = Parse;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}